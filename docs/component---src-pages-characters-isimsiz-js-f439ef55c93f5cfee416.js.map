{"version":3,"sources":["webpack:///./src/components/auras.js","webpack:///./src/pages/characters/isimsiz.js","webpack:///./src/components/equipment.js"],"names":["Golden","style","color","Blue","DeepBlue","BlueGreen","Dark","Glowing","Green","Humming","Sticky","Fiery","Shadowy","COLORS","randomColor","colors","Math","floor","random","length","Chromatic","useState","setColor","useEffect","nextColor","interval","setInterval","filter","x","clearInterval","className","styles","chromatic","Isimsiz","title","name","god","to","Equipment","children","Item","slot","rest","Ring","Neck","Torso","Ear","Eyes","Head","Legs","Feet","Arms","Hands","Body","Waist","Shield","Wrist","Wielded","Line","Lure","Held","DualWielded","TwoHand","Orb","ForGlyph","Brand","toLowerCase"],"mappings":"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","file":"component---src-pages-characters-isimsiz-js-f439ef55c93f5cfee416.js","sourcesContent":["/* eslint react-hooks/exhaustive-deps: 0 */\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./auras.module.css\";\n\nexport const Golden = () => (\n  <span style={{ color: \"gold\" }}>(Golden Aura)</span>\n);\nexport const Blue = () => <span style={{ color: \"cyan\" }}>(Blue Aura)</span>;\nexport const DeepBlue = () => (\n  <span style={{ color: \"blue\" }}>(Deep Blue Aura)</span>\n);\nexport const BlueGreen = () => (\n  <span style={{ color: \"#0d98ba\" }}>(Blue-Green Aura)</span>\n);\nexport const Dark = () => <span style={{ color: \"#4A235A\" }}>(Dark Aura)</span>;\nexport const Glowing = () => <span style={{ color: \"white\" }}>(Glowing)</span>;\nexport const Green = () => <span style={{ color: \"lime\" }}>(Green Aura)</span>;\nexport const Humming = () => <span>(Humming)</span>;\nexport const Sticky = () => <span>(Sticky)</span>;\nexport const Fiery = () => (\n  <span style={{ color: \"#E25822\" }}>(Fiery Aura)</span>\n);\nexport const Shadowy = () => (\n  <span style={{ color: \"purple\" }}>&#x3c;shadowy aura&#x3e;</span>\n);\n\nconst COLORS = [\n  \"white\",\n  \"yellow\",\n  \"red\",\n  \"cyan\",\n  \"lime\",\n  \"pink\",\n  \"orange\",\n  \"magenta\"\n];\n\nconst randomColor = (colors = COLORS) =>\n  colors[Math.floor(Math.random() * colors.length)];\n\nexport const Chromatic = () => {\n  const [color, setColor] = useState(randomColor);\n  useEffect(() => {\n    let nextColor = color;\n    const interval = setInterval(() => {\n      nextColor = randomColor(COLORS.filter(x => x !== nextColor));\n      setColor(nextColor);\n    }, 1050);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <span className={styles.chromatic} style={{ color }}>\n      (Chromatic Aura)\n    </span>\n  );\n};\n","import React from \"react\";\n\nimport Layout from \"../../components/layout\";\nimport SEO from \"../../components/seo\";\nimport Room from \"../../components/room\";\nimport Exits from \"../../components/exits\";\nimport { Link } from \"gatsby\";\nimport {\n  Equipment,\n  Torso,\n  Head,\n  Wielded,\n  Line,\n  Lure,\n  DualWielded,\n  Brand\n} from \"../../components/equipment\";\n\nconst Isimsiz = () => (\n  <Layout>\n    <SEO title=\"Isimsiz\" />\n    <Room>\n      <h1>Lord Isimsiz</h1>\n      <p>\n        A hideously deformed purple oozing mass of slime, rot and mold floats\n        here absorbing light, heat, and emotion from its environment. It appears\n        about the size of a large human but lacks any defined form. A bulbous\n        and amorphous blob, the...thing feasts on any positive energy that comes\n        within close contact. A strange black aura of pure hatred surrounds this\n        bizarre amalgamation of a creature. While its physical form lacks much\n        in the way of definition, a bulbous head periodically appears, revealing\n        a pair of yellow-ish white creamy eyes, about the size of a dragon's\n        nostril. Just below the \"eyes\", several writhing slimy tentacles with\n        shark like razor-edged teeth form around a beak shaped \"mouth\". As the\n        creature moves, other vague shapes appear and disappear within the ooze:\n        a pair of skinny appendages with hooked claws, perhaps \"arms\", and\n        tattered wings, propeling the mass from place to place. A sickening\n        squishing sound is heard whenever it moves, followed by a hollow\n        crunching sound, as if a giant were gnaw- ing on some bones.\n        Occasionally as the form shifts, various clothing becomes evident that\n        might fit on different normal body parts of a bi-pedal creature: a\n        purple cloak of freeze-dried elf veins, a warped and cracked shell of an\n        enchanted ancient tortoise, and various other things catch your eye.\n        Those who continue to look at it too long will surely experience a\n        growing sense of sheer terror overwhelming their senses as their hopes\n        and dreams, along with any will to go on living eventually slip away.\n      </p>\n      <p>\n        <Equipment name=\"Isimsiz\">\n          <Torso>(Tainted) (Black Aura) The Shroud of Eternal Darkness</Torso>\n          <Head>\n            (Humming) (Tainted) (Wailing) a swirling circlet of endless\n            tormented souls\n          </Head>\n          <Wielded>\n            (Humming) (Tainted) (Undetectable) A yawning and bottomless black\n            hole\n          </Wielded>\n          <Line>a thin coil of preserved griffon guts</Line>\n          <Lure>(Glowing) (Humming) a still-quivering elf brain</Lure>\n          <DualWielded>\n            (Humming) (Tainted) (Colorless Aura) the siphon of eternal depletion\n          </DualWielded>\n          <Brand god=\"isimsiz\" />\n        </Equipment>\n      </p>\n      <Exits>\n        <Link to=\"/valhalla/cave\">The Cave</Link>\n      </Exits>\n    </Room>\n  </Layout>\n);\n\nexport default Isimsiz;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  Blue,\n  BlueGreen,\n  Glowing,\n  Green,\n  Humming,\n  Sticky,\n  Fiery\n} from \"./auras\";\n\nexport function Equipment({ children, name }) {\n  return (\n    <>\n      {name && <>{name} is using:</>}\n      <table>\n        <tbody>{children}</tbody>\n      </table>\n    </>\n  );\n}\n\nEquipment.propTypes = {\n  children: PropTypes.node\n};\n\nexport const Item = ({ children, slot, ...rest }) => (\n  <tr {...rest}>\n    <td>\n      {\"<\"}\n      {slot}\n      {\">\"}\n    </td>\n    <td>{children}</td>\n  </tr>\n);\n\nItem.propTypes = {\n  children: PropTypes.node,\n  slot: PropTypes.string\n};\n\nexport const Ring = ({ children }) => (\n  <Item slot=\"worn on finger\">{children}</Item>\n);\n\nexport const Neck = ({ children }) => (\n  <Item slot=\"worn around neck\">{children}</Item>\n);\n\nexport const Torso = ({ children }) => (\n  <Item slot=\"worn on torso\">{children}</Item>\n);\n\nexport const Ear = ({ children }) => <Item slot=\"worn on ear\">{children}</Item>;\n\nexport const Eyes = ({ children }) => (\n  <Item slot=\"worn over eyes\">{children}</Item>\n);\n\nexport const Head = ({ children }) => (\n  <Item slot=\"worn on head\">{children}</Item>\n);\n\nexport const Legs = ({ children }) => (\n  <Item slot=\"worn on legs\">{children}</Item>\n);\n\nexport const Feet = ({ children }) => (\n  <Item slot=\"worn on feet\">{children}</Item>\n);\n\nexport const Arms = ({ children }) => (\n  <Item slot=\"worn on arms\">{children}</Item>\n);\n\nexport const Hands = ({ children }) => (\n  <Item slot=\"worn on hands\">{children}</Item>\n);\n\nexport const Body = ({ children }) => (\n  <Item slot=\"worn about body\">{children}</Item>\n);\n\nexport const Waist = ({ children }) => (\n  <Item slot=\"worn on waist\">{children}</Item>\n);\n\nexport const Shield = ({ children }) => (\n  <Item slot=\"worn as shield\">{children}</Item>\n);\n\nexport const Wrist = ({ children }) => (\n  <Item slot=\"worn around wrist\">{children}</Item>\n);\n\nexport const Wielded = ({ children }) => <Item slot=\"wielded\">{children}</Item>;\n\nexport const Line = ({ children }) => (\n  <Item slot=\"using fishing line\">{children}</Item>\n);\n\nexport const Lure = ({ children }) => (\n  <Item slot=\"using as bait/lure\">{children}</Item>\n);\n\nexport const Held = ({ children }) => <Item slot=\"held\">{children}</Item>;\n\nexport const DualWielded = ({ children }) => (\n  <Item slot=\"dual wielded\">{children}</Item>\n);\n\nexport const TwoHand = ({ children }) => (\n  <Item slot=\"two-handed wielded\">{children}</Item>\n);\n\nexport const Orb = ({ children }) => <Item slot=\"orb\">{children}</Item>;\n\nexport const ForGlyph = ({ children }) => (\n  <Item slot=\"forearm glyph\">{children}</Item>\n);\n\nexport const Brand = ({ children, god = \"\" }) => {\n  switch (god.toLowerCase()) {\n    case \"xyza\":\n      return (\n        <Brand>\n          <BlueGreen /> a Lemniscate\n        </Brand>\n      );\n    case \"darkwood\":\n      return (\n        <Brand>\n          <Humming /> <Sticky /> <Green /> The Living Battleaxe\n        </Brand>\n      );\n    case \"joja\":\n      return (\n        <Brand>\n          <Glowing /> <Blue /> a deep blue rose whose green thorny stem ends in\n          a quill tip\n        </Brand>\n      );\n    case \"riallus\":\n      return (\n        <Brand>\n          <Fiery /> a Rising Phoenix\n        </Brand>\n      );\n    case \"nyrisia\":\n      return <Brand>a broken glass orb</Brand>;\n    case \"nyrisia2\":\n      return <Brand>a keyhole</Brand>;\n    case \"xurinos\":\n      return <Brand>(Pulsing) (Sticky) the brand of the cynical llama</Brand>;\n    case \"huerkin\":\n      return <Brand>purple flames burn atop of a closed eye</Brand>;\n    case \"isimsiz\":\n      return <Brand>(Oozing) a bubbling black blob</Brand>;\n    default:\n      return <Item slot=\"branded\">{children}</Item>;\n  }\n};\n"],"sourceRoot":""}