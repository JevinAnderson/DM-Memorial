{"version":3,"sources":["webpack:///./src/pages/characters/oslog.js","webpack:///./src/components/auras.js","webpack:///./src/components/equipment.js"],"names":["Oslog","title","to","Golden","style","color","Blue","BlueGreen","Dark","Glowing","Green","Humming","Sticky","COLORS","randomColor","colors","Math","floor","random","length","Chromatic","useState","setColor","useEffect","nextColor","interval","setInterval","filter","x","clearInterval","className","styles","chromatic","Equipment","children","name","Item","slot","rest","Torso","Head","Legs","Feet","Arms","Shield","Wielded","DualWielded","Brand","god","toLowerCase"],"mappings":"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","file":"component---src-pages-characters-oslog-js-322aca7ad03bdb36d6bb.js","sourcesContent":["import React from \"react\";\n\nimport Layout from \"../../components/layout\";\nimport SEO from \"../../components/seo\";\nimport Room from \"../../components/room\";\nimport Exits from \"../../components/exits\";\nimport { Link } from \"gatsby\";\n\nimport { Equipment, Shield, Wielded } from \"../../components/equipment\";\n\nconst Oslog = () => (\n  <Layout>\n    <SEO title=\"Oslog\" />\n    <Room>\n      <h1>Oslog the combat master</h1>\n      <p>\n        Oslog is a master in combats. He is a large greenish troll who reaks of\n        blood and sweat. He offers a grin of blackened and brown teeth. His\n        frame is very large and muscles seem to bulge to the point they might\n        explode. In every round of combat you see his eyes widen with\n        excitement, and he grunts loudly. This gladiator's strength has whipped\n        many an aspiring warrior into shape.\n      </p>\n      <Equipment>\n        <Shield>a metal shield</Shield>\n        <Wielded>(Sticky) a gladiator's sword</Wielded>\n      </Equipment>\n      <Exits>\n        <Link to=\"/valhalla/keep/battle-room\">The Battle Room</Link>\n      </Exits>\n    </Room>\n  </Layout>\n);\n\nexport default Oslog;\n","/* eslint react-hooks/exhaustive-deps: 0 */\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./auras.module.css\";\n\nexport const Golden = () => (\n  <span style={{ color: \"gold\" }}>(Golden Aura)</span>\n);\nexport const Blue = () => <span style={{ color: \"cyan\" }}>(Blue Aura)</span>;\nexport const BlueGreen = () => <span style={{ color: \"#0d98ba\" }}>(Blue-Green Aura)</span>;\nexport const Dark = () => <span style={{ color: \"#4A235A\" }}>(Dark Aura)</span>;\nexport const Glowing = () => <span style={{ color: \"white\" }}>(Glowing)</span>;\nexport const Green = () => <span style={{ color: \"lime\" }}>(Green Aura)</span>;\nexport const Humming = () => <span>(Humming)</span>;\nexport const Sticky = () => <span>(Sticky)</span>\n\nconst COLORS = [\n  \"white\",\n  \"yellow\",\n  \"red\",\n  \"cyan\",\n  \"lime\",\n  \"pink\",\n  \"orange\",\n  \"magenta\"\n];\n\nconst randomColor = (colors = COLORS) =>\n  colors[Math.floor(Math.random() * colors.length)];\n\nexport const Chromatic = () => {\n  const [color, setColor] = useState(randomColor);\n  useEffect(() => {\n    let nextColor = color;\n    const interval = setInterval(() => {\n      nextColor = randomColor(COLORS.filter(x => x !== nextColor));\n      setColor(nextColor);\n    }, 1050);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <span className={styles.chromatic} style={{ color }}>\n      (Chromatic Aura)\n    </span>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Blue, BlueGreen, Glowing, Green, Humming, Sticky } from \"./auras\";\n\nexport function Equipment({ children, name }) {\n  return (\n    <>\n      {name && <>{name} is using:</>}\n      <table>\n        <tbody>{children}</tbody>\n      </table>\n    </>\n  );\n}\n\nEquipment.propTypes = {\n  children: PropTypes.node\n};\n\nexport const Item = ({ children, slot, ...rest }) => (\n  <tr {...rest}>\n    <td>\n      {\"<\"}\n      {slot}\n      {\">\"}\n    </td>\n    <td>{children}</td>\n  </tr>\n);\n\nItem.propTypes = {\n  children: PropTypes.node,\n  slot: PropTypes.string\n};\n\nexport const Torso = ({ children }) => (\n  <Item slot=\"worn on torso\">{children}</Item>\n);\n\nexport const Head = ({ children }) => (\n  <Item slot=\"worn on head\">{children}</Item>\n);\n\nexport const Legs = ({ children }) => (\n  <Item slot=\"worn on legs\">{children}</Item>\n);\n\nexport const Feet = ({ children }) => (\n  <Item slot=\"worn on feet\">{children}</Item>\n);\n\nexport const Arms = ({ children }) => (\n  <Item slot=\"worn on arms\">{children}</Item>\n);\n\nexport const Shield = ({ children }) => (\n  <Item slot=\"worn as shield\">{children}</Item>\n);\n\nexport const Wielded = ({ children }) => <Item slot=\"wielded\">{children}</Item>;\n\nexport const DualWielded = ({ children }) => (\n  <Item slot=\"dual wielded\">{children}</Item>\n);\n\nexport const Brand = ({ children, god = \"\" }) => {\n  switch (god.toLowerCase()) {\n    case \"xyza\":\n      return (\n        <Brand>\n          <BlueGreen /> a Lemniscate\n        </Brand>\n      );\n    case \"darkwood\":\n      return (\n        <Brand>\n          <Humming /> <Sticky /> <Green /> The Living Battleaxe\n        </Brand>\n      );\n    case \"joja\":\n      return (\n        <Brand>\n          <Glowing /> <Blue /> a deep blue rose whose green thorny stem ends in\n          a quill tip\n        </Brand>\n      );\n    default:\n      return <Item slot=\"branded\">{children}</Item>;\n  }\n};\n"],"sourceRoot":""}